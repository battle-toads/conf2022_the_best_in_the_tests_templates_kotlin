package codes.spectrum.conf2022.doc_type

/**
 *
 * */
enum class DocType(val normaliseRegex: Regex) {
    UNDEFINED("".toRegex()),

    /**
     * Специальный тип, чтобы вернуть явно, что нет документов в переданной строке
     */
    NOT_FOUND("".toRegex()),

    /**
     * Паспорт РФ
     * */
    PASSPORT_RF("^\\d{10}$".toRegex()),

    /**
     * Водительское удостоверение
     * */
    DRIVER_LICENSE("^\\d{10}$".toRegex()),

    /**
     * Идентификационный номер транспортного средства
     * */
    VIN("^[A-Z0-9]{17}$".toRegex()),

    /**
     * Государственный регистрационный номер транспортного средства
     * */
    GRZ("^[АВЕКМНОРСТУХ]\\d{3}[АВЕКМНОРСТУХ]{2}\\d{2,3}$".toRegex()),

    /**
     * Свидетельство о регистрации транспортного средства
     * */
    STS("^\\d{2}[А-ЯA-Z0-9]{2}\\d{6}$".toRegex()),

    /**
     * ИНН Физ. лица
     * */
    INN_FL("^\\d{12}$".toRegex()),

    /**
     * ИНН Юр. лица
     * */
    INN_UL("^\\d{10}$".toRegex()),

    /**
     * ОГРН
     * */
    OGRN("^\\d{13}$".toRegex()),

    /**
     * ОГРНИП
     * */
    OGRNIP("^\\d{15}$".toRegex()),

    /**
     * СНИЛС
     * */
    SNILS("^\\d{3}-\\d{3}-\\d{3}-\\d{2}$".toRegex()),

    /**
     * Тестовый тип T1 - форматные требования в принципе отражены в регексе
     * Дополнительная валидация:
     * если номер состоит из 8 символов, а не 9 то на индексе [4] должна быть цифра `5`, а последняя цифра - `7`
     */
    T1("^BTT[10]\\d{4,5}$".toRegex()),

    /**
     * Тестовый тип T2 - форматный требования отражены в регексе
     * Дополнительная валидация:
     * > среди символов от индекса [4] и дальше должна быть хотя бы одна цифра `5`
     */
    T2("^BTT[20]\\d{4}$".toRegex()),
}
